<?php
/**
 *
 * Shipper HQ Pickup Module
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * Shipper HQ Shipping
 *
 * @category ShipperHQ
 * @package ShipperHQ_Pickup
 * @copyright Copyright (c) 2017 Zowta LLC (http://www.ShipperHQ.com)
 * @license http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 * @author ShipperHQ Team sales@shipperhq.com
 */

/* @var $block Shipperhq\Pickup\Block\Adminhtml\Storepickup */
$config = $block->getConfig();
$locations = $config['locations'];
$adminRequestRatesUrl = $block->getAdminRequestRatesUrl();
?>
<?php if (isset($config['show_locations']) && $config['show_locations']): ?>
    <script>
        var pickup_config = <?php echo json_encode($config); ?>;
        var locations = pickup_config['locations'];
        var pickup_request_rates_url = "<?php echo $adminRequestRatesUrl;?>";
        require([
            'jquery',
            'jquery/ui'
        ], function ($) {
            $('#shipperhq_locations').on('change', function(event) {
                processLocation();
            });

            $(window).load(function () {
                // Run one time to process pre-selected location
                processLocation();
            });

            $('#shipperhq_locations').ready(function () {
                // Run one time to process pre-selected location
               processLocation();
            });

            //event handler for when date selected for pickup location
            var calendar = $('#shipperhq_calendar');
            calendar.on('pickup_date_selected', function (event, params) {
                //do rate request for carrier, location and date selected
                var locationId = $('#shipperhq_locations').val();
                var isInitialize = false;
                var dateselect_url =  pickup_request_rates_url;
                $request = new Ajax.Request(dateselect_url, {
                    parameters: {carriergroup_id: '', carrier_code: params['carrier_code'],
                        date_selected: params['date_selected'] , load_only: isInitialize, carrier_id: params['carrier_id'],
                        location_id: locationId},
                    showLoader: true,
                    onComplete: updateLocations
                });

            });



            function updateLocations(transport) {
                var response = transport.responseText.evalJSON();

                //update rates - phase 2
                //var rates = response.rates

                pickup_config = response.location_config;
                locations = pickup_config['locations'];
                processLocation();
            };
            /**
             * Process location and trigger calendar stuff (if appropriate)
             */
            function processLocation() {
                var val = $('#shipperhq_locations').val();
                $.each(locations, function (i, item) {
                    var val = $('#shipperhq_locations').val();
                    var stringLocationId = item.locationId.toString();
                    if (stringLocationId === val) {
                        if (typeof item.calendarDetails !== 'undefined') {
                            var locationCalendarDetails = processCalendarDetails(item.calendarDetails);
                            setTimeout(function () {
                                $('#shipperhq_calendar').trigger('calendar_update', locationCalendarDetails);
                            }, 100);
                        }
                    }
                });
            };

            function processCalendarDetails(data) {
                var calendarData = {
                    show_calendar: data.showDate,
                    dateFormat: data.dateFormat,
                    datepickerFormat: data.datepickerFormat,
                    min_date: data.min_date,
                    max_date: data.max_date,
                    allowed_dates: data.allowed_dates,
                    carrier_code: data.carrier_code,
                    carrier_id: data.carrier_id,
                    timeslots: data.display_time_slots,
                    show_timeslots: data.showTimeslots,
                    date_selected : data.date_selected,
                    default_date : data.default_date
                };
                return calendarData;
            };
        });
    </script>
    <label for="shipperhq_locations">Location:</label>
    <select id="shipperhq_locations" name="order[location]">
        <?php foreach ($locations as $location): ?>
            <?php $place = $location['locationDetails']; ?>
            <option value="<?php echo $location['locationId']; ?>"><?php echo $place['pickupName'] . ' (' . $place['distance'] . $place['distanceUnit'] . ')'; ?></option>
        <?php endforeach ?>
    </select>
<?php endif ?>
